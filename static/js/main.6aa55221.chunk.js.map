{"version":3,"sources":["store/actions.ts","store/index.ts","api.ts","store/selectors.ts","components/PokemonCard/PokemonCard.tsx","components/PokemonInfo/PokemonInfo.tsx","components/PokemonList/PokemonList.tsx","App.tsx","index.tsx"],"names":["ActionType","SetSelectedPokemonAction","payload","type","SET_SELECTED_POKEMON","initialState","pokemons","selectedPokemon","store","createStore","state","action","SET_POKEMONS","applyMiddleware","thunkMiddleware","getPockemonsCount","a","axios","get","response","data","getPockemonsType","getSelectedPokemon","PokemonCard","pokemon","dispatch","useDispatch","useSelector","selectPokemon","useCallback","currentPokemon","name","className","src","photo","alt","types","map","url","classnames","onClick","PokemonInfo","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","info","stats","stat","base_stat","moves","move","PokemonList","useState","offset","setOffset","query","setQuery","setTypes","selectedType","setSelectedType","countAllPokemons","setCountAllPokemons","pokemonsByQuery","filter","toLowerCase","includes","some","item","getVisiblePokemons","useEffect","allPokemonsFromServer","results","Promise","all","dataAboutCurrentPokemon","infoAboutCurrentPokemon","undatePokemon","sprites","front_default","pokemonWithInfo","getFetchPokemonByURL","then","typesFromServer","catch","error","Error","countFromServer","count","getNextPokemons","offsets","getPrevPokemons","disabled","placeholder","value","onChange","event","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aa55221.chunk.js","sourcesContent":["import axios from 'axios';\n// eslint-disable-next-line import/no-cycle\nimport { AppDispatch } from './index';\n// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { Pokemon, Type } from '../react-app-env';\n\n// eslint-disable-next-line no-shadow\nexport enum ActionType {\n  SET_POKEMONS = 'SET_POKEMONS',\n  SET_SELECTED_POKEMON = 'SET_SELECTED_POKEMON',\n}\n\ninterface SetPokemons {\n  type: ActionType.SET_POKEMONS,\n  payload: Pokemon[],\n}\n\ninterface SetSelectedPokemon {\n  type: ActionType.SET_SELECTED_POKEMON,\n  payload: Pokemon | null,\n}\n\nexport type Action = SetPokemons | SetSelectedPokemon;\n\nexport const SetPokemonsAction = (payload: Pokemon[]): Action => ({\n  type: ActionType.SET_POKEMONS,\n  payload,\n});\n\nexport const SetSelectedPokemonAction = (payload: Pokemon | null): Action => ({\n  type: ActionType.SET_SELECTED_POKEMON,\n  payload,\n});\n\nexport const getFetchPokemonByURL = (offset: number) => {\n  return async (dispatch: AppDispatch) => {\n    const allPokemonsFromServer = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=20&offset=${offset}`);\n    const response = allPokemonsFromServer.data.results;\n    const pokemonWithInfo: Pokemon[] = await Promise\n      .all(response.map(async (pokemon: { url: string; name: string; }) => {\n        const dataAboutCurrentPokemon = await axios.get(pokemon.url);\n        const infoAboutCurrentPokemon = dataAboutCurrentPokemon.data;\n\n        const undatePokemon: Pokemon = {\n          name: pokemon.name,\n          url: pokemon.url,\n          photo: infoAboutCurrentPokemon.sprites.front_default,\n          types: infoAboutCurrentPokemon.types.map((type: { type: Type; }) => ({\n            name: type.type.name,\n            url: type.type.url,\n          })),\n          info: {\n            stats: infoAboutCurrentPokemon.stats,\n            moves: infoAboutCurrentPokemon.moves,\n          },\n        };\n\n        return undatePokemon;\n      }));\n\n    dispatch(SetPokemonsAction(pokemonWithInfo));\n  };\n};\n","import { createStore, applyMiddleware, AnyAction } from 'redux';\nimport thunkMiddleware, { ThunkDispatch } from 'redux-thunk';\n// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { State } from '../react-app-env';\n// eslint-disable-next-line import/no-cycle\nimport { Action, ActionType } from './actions';\n\nconst initialState: State = {\n  pokemons: [],\n  selectedPokemon: null,\n};\n\nconst reducer = (state = initialState, action: Action): State => {\n  switch (action.type) {\n    case ActionType.SET_POKEMONS:\n      return {\n        ...state,\n        pokemons: [...action.payload],\n      };\n\n    case ActionType.SET_SELECTED_POKEMON:\n      return {\n        ...state,\n        selectedPokemon: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type TypedDispatch = ThunkDispatch<RootState, unknown, AnyAction>;\n","import axios from 'axios';\n\nconst TYPE_URL = 'https://pokeapi.co/api/v2/type/';\nconst COUNT_URL = 'https://pokeapi.co/api/v2/pokemon';\n\nexport const getPockemonsCount = async () => {\n  const response = await axios.get(COUNT_URL);\n\n  return response.data;\n};\n\nexport const getPockemonsType = async () => {\n  const response = await axios.get(TYPE_URL);\n\n  return response.data;\n};\n","// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { State } from '../react-app-env';\n\nexport const getSelectedPokemon = (state: State) => state.selectedPokemon;\n\nexport const getVisiblePokemons = (query: string, selectedType: string) => {\n  return (state: State) => {\n    const pokemonsByQuery = state.pokemons.filter(pokemon => (\n      pokemon.name.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    if (selectedType) {\n      const pokemonsByType = pokemonsByQuery.filter(pokemon => (\n        pokemon.types.some(item => item.name === selectedType)\n      ));\n\n      return pokemonsByType;\n    }\n\n    return pokemonsByQuery;\n  };\n};\n","import React, { useCallback } from 'react';\nimport classnames from 'classnames';\nimport './PokemonCard.scss';\nimport { useDispatch, useSelector } from 'react-redux';\n// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { Pokemon } from '../../react-app-env';\nimport { SetSelectedPokemonAction } from '../../store/actions';\nimport { getSelectedPokemon } from '../../store/selectors';\nimport { TypedDispatch } from '../../store/index';\n\ninterface Props {\n  pokemon: Pokemon,\n}\n\nexport const PokemonCard: React.FC<Props> = ({ pokemon }) => {\n  const dispatch: TypedDispatch = useDispatch();\n  const selectedPokemon = useSelector(getSelectedPokemon);\n\n  const selectPokemon = useCallback((currentPokemon: Pokemon) => {\n    if (selectedPokemon?.name !== currentPokemon.name) {\n      dispatch(SetSelectedPokemonAction(currentPokemon));\n    } else {\n      dispatch(SetSelectedPokemonAction(null));\n    }\n  }, [selectedPokemon]);\n\n  return (\n    <div className=\"col-sm-6 col-md-4 col-xl-3\">\n      <div className=\"card border-black shadow\">\n        <img src={pokemon.photo} className=\"card__image\" alt={pokemon.name} />\n        <div className=\"card-body\">\n          <h5 className=\"card__title card-title\">{pokemon.name}</h5>\n\n          <div className=\"text-center mb-3\">\n            <span className=\"me-2\">Types:</span>\n            {pokemon.types.map((type => (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-secondary me-3 pe-none\"\n                key={type.url}\n              >\n                {type.name}\n              </button>\n            )))}\n          </div>\n\n          <div className=\"text-center\">\n            <button\n              type=\"button\"\n              className={classnames('btn', 'btn-primary', {\n                'btn-danger': selectedPokemon?.name === pokemon.name,\n              })}\n              onClick={() => selectPokemon(pokemon)}\n            >\n              {selectedPokemon?.name !== pokemon.name ? 'Open details' : 'Close details'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './PokemonInfo.scss';\nimport { useSelector } from 'react-redux';\nimport { getSelectedPokemon } from '../../store/selectors';\n\nexport const PokemonInfo: React.FC = () => {\n  const selectedPokemon = useSelector(getSelectedPokemon);\n\n  return (\n    <div className=\"container info\">\n      <h2 className=\"text-primary text-center\">{`Pokemon details: ${selectedPokemon?.name}`}</h2>\n      <div className=\"text-center\">\n        <img src={selectedPokemon?.photo} alt={selectedPokemon?.name} />\n      </div>\n\n      <div className=\"accordion\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n              <strong>Types:</strong>\n            </button>\n          </h2>\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n            <div className=\"accordion-body\">\n              {selectedPokemon?.types.map(type => (\n                <p key={type.url}>{type.name}</p>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n              <strong>Stats:</strong>\n            </button>\n          </h2>\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n            <div className=\"accordion-body\">\n              {selectedPokemon?.info.stats.map(stat => (\n                <p key={stat.stat.url}>{`${stat.stat.name} - ${stat.base_stat}`}</p>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingThree\">\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"true\" aria-controls=\"collapseThree\">\n              <strong>Moves:</strong>\n            </button>\n          </h2>\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n            <div className=\"accordion-body\">\n              {selectedPokemon?.info.moves.map(move => (\n                <p key={move.move.url}>{move.move.name}</p>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './PokemonList.scss';\n// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { Type } from '../../react-app-env';\nimport { getPockemonsType, getPockemonsCount } from '../../api';\nimport { getFetchPokemonByURL } from '../../store/actions';\nimport { getVisiblePokemons, getSelectedPokemon } from '../../store/selectors';\nimport { TypedDispatch } from '../../store/index';\nimport { PokemonCard } from '../PokemonCard';\nimport { PokemonInfo } from '../PokemonInfo';\n\nexport const PokemonList: React.FC = () => {\n  const dispatch: TypedDispatch = useDispatch();\n  const [offset, setOffset] = useState(0);\n  const [query, setQuery] = useState('');\n  const [types, setTypes] = useState<Type[]>([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [countAllPokemons, setCountAllPokemons] = useState(0);\n  const pokemons = useSelector(getVisiblePokemons(query, selectedType));\n  const selectedPokemon = useSelector(getSelectedPokemon);\n\n  useEffect(() => {\n    dispatch(getFetchPokemonByURL(offset));\n\n    getPockemonsType()\n      .then(typesFromServer => setTypes(typesFromServer.results))\n      .catch(error => {\n        throw new Error(`${error}`);\n      });\n\n    getPockemonsCount()\n      .then(countFromServer => setCountAllPokemons(countFromServer.count))\n      .catch(error => {\n        throw new Error(`${error}`);\n      });\n  }, [offset]);\n\n  const getNextPokemons = useCallback((offsets: number) => {\n    if (offsets <= countAllPokemons) {\n      setOffset(offsets + 20);\n    }\n  }, [offset]);\n\n  const getPrevPokemons = useCallback((offsets: number) => {\n    if (offsets - 20 >= 0) {\n      setOffset(offsets - 20);\n    }\n  }, [offset]);\n\n  return (\n    <div className=\"pokemons\">\n      <div className=\"pokemons__block\">\n        <div className=\"pokemons__content container\">\n          <div className=\"text-center m-3\">\n            <img src=\"./images/pokeapi_256.png\" alt=\"logo\" />\n          </div>\n          <div className=\"text-center m-5\">\n            <button\n              type=\"button\"\n              disabled={offset === 0}\n              className=\"btn btn-warning me-4\"\n              onClick={() => {\n                getPrevPokemons(offset);\n              }}\n            >\n              Previous page\n            </button>\n\n            <button\n              type=\"button\"\n              disabled={offset === countAllPokemons}\n              className=\"btn btn-primary\"\n              onClick={() => {\n                getNextPokemons(offset);\n              }}\n            >\n              Next page\n            </button>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder=\"Search Pokemon\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          <select\n            className=\"form-select mb-4\"\n            value={selectedType}\n            onChange={(event) => setSelectedType(event.target.value)}\n          >\n            <option value=\"\">Choose Pokemon type</option>\n            {types.map(type => (\n              <option key={type.name} value={type.name}>{type.name}</option>\n            ))}\n          </select>\n\n          <div className=\"row g-3\">\n            {pokemons.map(pokemon => (\n              <PokemonCard key={pokemon.url} pokemon={pokemon} />\n            ))}\n          </div>\n        </div>\n\n        {selectedPokemon !== null && (\n          <div className=\"pokemons__sidebar\">\n            <PokemonInfo />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { PokemonList } from './components/PokemonList';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <main>\n        <PokemonList />\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}